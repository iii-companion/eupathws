#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
#  Author: Sascha Steinbiss <ss34@sanger.ac.uk>
#  Copyright (c) 2016 Genome Research Ltd
#
#  Permission to use, copy, modify, and distribute this software for any
#  purpose with or without fee is hereby granted, provided that the above
#  copyright notice and this permission notice appear in all copies.
#
#  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

import os
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), ".."))
import argparse
from bs4 import BeautifulSoup

from eupathtables.genemetrics import GeneMetrics

parser = argparse.ArgumentParser(description='Enumerate reference species ' +
                                             'per EuPathDB database.')
parser.add_argument('baseurl', metavar='BASEURL', type=str,
                    help='baseurl for webservices (everything in front of "/webservices")')
parser.add_argument('-l', '--login', metavar='STRING', type=str,
                    help='login credentials (for locked QA sites) format user:pass',
                    dest='login')
parser.add_argument('-a', '--all', action="store_true",
                    help='print all organisms (not just reference strains)',
                    dest='all')
args = parser.parse_args()

gm = GeneMetrics(args.baseurl, login=args.login)

for g in gm:
    if (g['is_reference_strain'] == 'yes' or args.all) and g['is_annotated_genome'] == '1':
        print(BeautifulSoup(g['organism'], 'html.parser').text)
